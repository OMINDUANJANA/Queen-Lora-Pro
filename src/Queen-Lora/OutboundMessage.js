/**
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OutboundMessage model module.
 * @module Queen-Lora/OutboundMessage
 * @version 1.0.0
 */
class OutboundMessage {
    /**
     * Constructs a new <code>OutboundMessage</code>.
     * @alias module:Queen-Lora/OutboundMessage
     */
    constructor() { 
        
        OutboundMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OutboundMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Queen-Lora/OutboundMessage} obj Optional instance to populate.
     * @return {module:Queen-Lora/OutboundMessage} The populated <code>OutboundMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutboundMessage();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('last_try')) {
                obj['last_try'] = ApiClient.convertToType(data['last_try'], 'Number');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

/**
     * Returns message id in queue
     * @return {Number}
     */
    getId() {
        return this.id;
    }

    /**
     * Sets message id in queue
     * @param {Number} id message id in queue
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * Returns text message in queue
     * @return {String}
     */
    getBody() {
        return this.body;
    }

    /**
     * Sets text message in queue
     * @param {String} body text message in queue
     */
    setBody(body) {
        this['body'] = body;
    }
/**
     * Returns type of the message in queue
     * @return {module:Queen-Lora/OutboundMessage.TypeEnum}
     */
    getType() {
        return this.type;
    }

    /**
     * Sets type of the message in queue
     * @param {module:Queen-Lora/OutboundMessage.TypeEnum} type type of the message in queue
     */
    setType(type) {
        this['type'] = type;
    }
/**
     * Returns Last try time to send a message
     * @return {Number}
     */
    getLastTry() {
        return this.last_try;
    }

    /**
     * Sets Last try time to send a message
     * @param {Number} lastTry Last try time to send a message
     */
    setLastTry(lastTry) {
        this['last_try'] = lastTry;
    }
/**
     * Returns Additional message data
     * @return {Object}
     */
    getMetadata() {
        return this.metadata;
    }

    /**
     * Sets Additional message data
     * @param {Object} metadata Additional message data
     */
    setMetadata(metadata) {
        this['metadata'] = metadata;
    }

}

/**
 * message id in queue
 * @member {Number} id
 */
OutboundMessage.prototype['id'] = undefined;

/**
 * text message in queue
 * @member {String} body
 */
OutboundMessage.prototype['body'] = undefined;

/**
 * type of the message in queue
 * @member {module:Queen-Lora/OutboundMessage.TypeEnum} type
 */
OutboundMessage.prototype['type'] = undefined;

/**
 * Last try time to send a message
 * @member {Number} last_try
 */
OutboundMessage.prototype['last_try'] = undefined;

/**
 * Additional message data
 * @member {Object} metadata
 */
OutboundMessage.prototype['metadata'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OutboundMessage['TypeEnum'] = {

    /**
     * value: "chat"
     * @const
     */
    "chat": "chat",

    /**
     * value: "image"
     * @const
     */
    "image": "image",

    /**
     * value: "ptt"
     * @const
     */
    "ptt": "ptt",

    /**
     * value: "document"
     * @const
     */
    "document": "document",

    /**
     * value: "audio"
     * @const
     */
    "audio": "audio",

    /**
     * value: "video"
     * @const
     */
    "video": "video",

    /**
     * value: "location"
     * @const
     */
    "location": "location",

    /**
     * value: "call_log"
     * @const
     */
    "call_log": "call_log"
};



export default OutboundMessage;

